@model Domain.Models.Product

@{
    ViewData["Title"] = "Create Product";
}

<div class="container py-4">
    <div class="card shadow-sm">
        <div class="card-header bg-primary text-white">
            <h2 class="h5 mb-0">
                <i class="fas fa-plus-circle me-2"></i>Create New Product
            </h2>
        </div>
        <div class="card-body">
            <form asp-action="Create" enctype="multipart/form-data" class="needs-validation" novalidate>
                <div asp-validation-summary="ModelOnly" class="alert alert-danger"></div>

                <div class="row g-3">
                    <div class="col-md-12">
                        <div class="form-floating">
                            <label asp-for="Name" class="form-label">Product Name</label>
                            <input asp-for="Name" class="form-control" placeholder=" " required />
                            <span asp-validation-for="Name" class="text-danger small"></span>
                        </div>
                    </div>

                    <div class="col-md-12">
                        <div class="form-floating">
                            <label asp-for="Description" class="form-label">Description</label>
                            <textarea asp-for="Description" class="form-control" placeholder=" " style="height: 100px"></textarea>
                            <span asp-validation-for="Description" class="text-danger small"></span>
                        </div>
                    </div>

                    <div class="col-md-6">
                        <div class="form-floating">
                            <label asp-for="Price" class="form-label">Price</label>
                            <input asp-for="Price" class="form-control" placeholder=" " required />
                            <span asp-validation-for="Price" class="text-danger small"></span>
                        </div>
                    </div>

                    <div class="col-md-12">
                        <div class="mb-3">
                            <label asp-for="CategoryId" class="form-label">Category</label>
                            <div>
                                <select asp-for="CategoryId" class="form-select" asp-items="@(ViewBag.Categories as SelectList)" required>
                                    <option value="">-- Select a Category --</option>
                                </select>
                            </div>
                            <span asp-validation-for="CategoryId" class="text-danger small"></span>
                        </div>
                    </div>


                    <div class="col-md-12">
                        <div class="mb-3">
                            <label asp-for="Image" class="form-label fw-bold">Product Image</label>
                            <input type="file" name="Image" class="form-control" accept="image/*" required />
                            <div class="form-text">Upload product image (jpg, jpeg, png, gif)</div>
                            <span asp-validation-for="Image" class="text-danger small"></span>
                        </div>
                    </div>
                </div>

                <div class="mt-4 d-flex justify-content-between">
                    <button type="submit" class="btn btn-success px-4">
                        <i class="fas fa-save me-2"></i>Create Product
                    </button>
                    <a asp-action="Index" class="btn btn-outline-secondary">
                        <i class="fas fa-arrow-left me-2"></i>Back to List
                    </a>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        // Enable Bootstrap validation styles
        (function () {
            'use strict'

            // Fetch all the forms we want to apply custom Bootstrap validation styles to
            var forms = document.querySelectorAll('.needs-validation')

            // Loop over them and prevent submission
            Array.prototype.slice.call(forms)
                .forEach(function (form) {
                    form.addEventListener('submit', function (event) {
                        if (!form.checkValidity()) {
                            event.preventDefault()
                            event.stopPropagation()
                        }

                        form.classList.add('was-validated')
                    }, false)
                })
        })()
    </script>
}